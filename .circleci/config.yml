version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.2
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@0.4.0

jobs:

   prod-deployment:
     docker:
      - image: 'cimg/python:3.10'
     parameters:
       cluster-name:
         description: |
           Name of the EKS cluster
         type: string
         default: khalifacapstone
     steps:
       - checkout
       - aws-eks/update-kubeconfig-with-authenticator:
           cluster-name: << parameters.cluster-name >>
           install-kubectl: true
       - kubernetes/create-or-update-resource:
           resource-file-path: Deployment.yml
           resource-name: deployment/Deployment.yml
       - run:
           name: "Post Main Deployment Commands For Testing Main Application & Deployment"
           command: |
             kubectl get nodes
             kubectl get deployment
             kubectl get services
             kubectl get pods
             sleep 60
             kubectl get pods
             kubectl get services
             sleep 60
             kubectl get pods
             kubectl get services
             echo $lb
             export lb=`kubectl get service | tail -1 | cut -d " " -f 10`
             curl "http://$lb:8000"

   lint-test-app:
     docker:
       - image: python:3.7.3-stretch
     working_directory: ~/repo
     steps:
       - checkout
       - run:
           name: "Setup Environment & Install packages"
           command: |
             make setup
             make install
       - run:
           name: "Linting Code"
           command: |
             . venv/bin/activate
             make lint
       - run:
           name: "Testing Code"
           command: |
             . venv/bin/activate
             ls -lah
             make install
             make test

   new-deployment:
     docker:
      - image: 'cimg/python:3.10'
     parameters:
       cluster-name:
         description: |
           Name of the EKS cluster
         type: string
         default: khalifacapstone
     steps:
       - checkout
       - aws-eks/update-kubeconfig-with-authenticator:
           cluster-name: << parameters.cluster-name >>
           install-kubectl: true
       - kubernetes/create-or-update-resource:
           get-rollout-status: true
           resource-file-path: Rolling-deployment.yml
           resource-name: deployment/web-app-deployment
       - run:
           name: "Post Rolling Deployment Commands For Testing New Application"
           command: |
             kubectl get nodes
             kubectl get deployment
             kubectl get services
             kubectl get pods
             sleep 60
             kubectl get pods
             kubectl get services
             sleep 60
             kubectl get pods
             kubectl get services
             export lb=`kubectl get service | tail -1 | cut -d " " -f 10`
             echo $lb
             export url="http://$lb:8000"
             curl $url
             curl "$url/hi/"
             curl "$url/hi/Mohamed"
             kubectl get pods

workflows:
  
  deployment:
    jobs:
       - aws-eks/create-cluster:
           cluster-name: khalifacapstone
       - aws-ecr/build-and-push-image:
           dockerfile: Dockerfile-Old
        
           repo: devops-project
           tag: 'web-app-1.0'  
           region: us-east-1
           registry-id: registry_id  
           requires:
              - aws-eks/create-cluster           
       - prod-deployment:
           cluster-name: khalifacapstone
           requires:
              - aws-ecr/build-and-push-image
       - lint-test-app:
           requires:
             - prod-deployment
       - aws-ecr/build-and-push-image:
           name: BuildPush
           dockerfile: Dockerfile
        
           repo: devops-project
           tag: 'web-app-2.0'  
           region: us-east-1
           registry-id: registry_id  
           requires:
              - lint-test-app   
       - new-deployment:
          cluster-name: khalifacapstone
          requires:
             - BuildPush